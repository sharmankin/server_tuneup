#!/usr/bin/env bash

cd "$(dirname "$0")" && source ../env || exit 20

release="$(lsb_release -si 2>/dev/null)"

[[ ! ${release} = Ubuntu ]] && printf 'System release is %s please use another script\n' "${release}" && exit 2

session_timestamp="$(date +"%Y%m%d-%H%M%S")"

printf 'Current hostname %s will be used in prompt\n' "${HOSTNAME}"
read -r -p "Write another or leave blank for ${HOSTNAME} " new_hostname

[[ -n ${new_hostname} ]] && prompt_host_name=$new_hostname || prompt_host_name=${HOSTNAME}

if [[ -f "${HOME}/.bashrc" ]] && [[ -n $(sed -rn '/^# automatically generated with install/p' "${HOME}"/.bashrc) ]]; then
  echo 'file was modified'
  exit 3
fi

if [[ ! -f "${HOME}/.profile" ]]; then

  tee "${HOME}/.profile" <<EOF
# ~/.profile: executed by Bourne-compatible login shells.

if [ "\$BASH" ]; then
  if [ -f ~/.bashrc ]; then
    . ~/.bashrc
  fi
fi

mesg n 2> /dev/null || true
EOF
fi

backup_dir="${HOME}"/.config_backup

bashrc="${HOME}/.bashrc"
bash_aliases="${HOME}/.bash_aliases"
fzf_dir="${HOME}/.fzf"

if [[ -f "${bashrc}" ]]; then
  mkdir -p "${backup_dir}"
  cp "${bashrc}" "${backup_dir}/bashrc_backup_${session_timestamp}"
fi

if [[ -f "${bash_aliases}" ]]; then
  mkdir -p "${backup_dir}"
  cp "${bash_aliases}" "${backup_dir}/bash_aliases_backup_${session_timestamp}"
fi

if [[ ! -d "${fzf_dir}" ]]; then
  git clone --depth 1 https://github.com/junegunn/fzf.git "${fzf_dir}" >/dev/null 2>&1
  "${fzf_dir}/install" --all >/dev/null 2>&1
fi

prompt() {

  if [[ -x /usr/bin/tput ]] && tput setaf 1 >&/dev/null; then
    local RED RESET WD_C STATUS_C END_LINE HOST_C USER_C colors selected_color color prompt_alias ps_start
    RED="\[\033[1;31m\]"
    RESET="\[\033[0m\]"
    WD_C="\[\033[1;33m\]"
    STATUS_C="\[\033[1;31m\]"
    END_LINE='&'

    prompt_alias=$prompt_host_name

    ps_start=''

    if [[ "${prompt_host_name}" = "${HOSTNAME}" ]]; then
      prompt_alias="\\H"
    fi

    if [[ $(whoami) = root ]]; then
      HOST_C=${RED}
      USER_C=${RED}
      END_LINE='#'
      printf '\n'
    else
      colors="$(printf '%b\n' '[ \e[33mSelect color for prompt\e[m ]' \
        " 1) \\e[32m$prompt_host_name\\e[m" \
        " 2) \\e[33m$prompt_host_name\\e[m" \
        " 3) \\e[34m$prompt_host_name\\e[m" \
        " 4) \\e[35m$prompt_host_name\\e[m" \
        " 5) \\e[36m$prompt_host_name\\e[m" \
        " 6) \\e[1;32m$prompt_host_name\\e[m" \
        " 7) \\e[1;33m$prompt_host_name\\e[m" \
        " 8) \\e[1;34m$prompt_host_name\\e[m" \
        " 9) \\e[1;35m$prompt_host_name\\e[m" \
        " 0) \\e[1;36m$prompt_host_name\\e[m" \
        '### : ')"
      read -r -p "$colors" -n 1 color
      printf '\n'
      case "${color}" in
      1) selected_color='\[\033[32m\]' ;;
      2) selected_color='\[\033[33m\]' ;;
      3) selected_color='\[\033[34m\]' ;;
      4) selected_color='\[\033[35m\]' ;;
      5) selected_color='\[\033[36m\]' ;;
      6) selected_color='\[\033[1;32m\]' ;;
      7) selected_color='\[\033[1;33m\]' ;;
      8) selected_color='\[\033[1;34m\]' ;;
      9) selected_color='\[\033[1;35m\]' ;;
      0) selected_color='\[\033[1;36m\]' ;;
      *)
        if echo "$color" | grep -qE '^1?;?[[:digit:]]{2}$'; then
          selected_color="\\[\\033[${color}m\\]"
        else
          selected_color='\[\033[1;34m\]'
        fi
        ;;
      esac
      HOST_C="${selected_color}"
      USER_C="\[\033[1;32m\]"
      END_LINE='&'
    fi
  fi
  printf '[ \\A ] [%s \\$? %s] [ %s\\w%s ]\n[ %s\\u%s@%s%s%s ]%s%s%s: ' \
    "${STATUS_C}" "${RESET}" "${WD_C}" "${RESET}" "${USER_C}" "${RESET}" "${HOST_C}" "${prompt_alias}" \
    "${RESET}" "${USER_C}" "${END_LINE}" "${RESET}"
}

prompt_value=$(prompt)

check_file_protection "${bashrc}" && {

  tee "${bashrc}" >/dev/null 2>&1 <<EOF
#!/bin/bash
# protected

PS1="${prompt_value}"

HISTCONTROL=ignoreboth
shopt -s histappend
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s checkwinsize

[[ -x /usr/bin/lesspipe ]] && eval "\$(SHELL=/bin/sh lesspipe)"

[[ -f ${HOME}/.bash_aliases ]] && source ${HOME}/.bash_aliases

[[ -f ${HOME}/.fzf.bash ]] && source ${HOME}/.fzf.bash

if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    source /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
  fi
fi

EOF
}


check_file_protection "${bash_aliases}" && {
  tee "${HOME}/.bash_aliases" >/dev/null 2>&1 <<EOF
#!/usr/bin/env bash
# protected
if [[ -x /usr/bin/dircolors ]]; then
    test -r ~/.dircolors && eval "\$(dircolors -b ~/.dircolors)" || eval "\$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias l='ls -1F'
alias ll='ls -lF'
alias la='ls -lAF'
alias clr='clear && tput cud \$LINES'
alias running_services='systemctl list-units  --type=service  --state=running'

EOF
}
